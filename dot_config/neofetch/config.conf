print_info() {
  info title
  music_playing=$(osascript -e 'set theName to ""' -e 'tell application "Music"' -e 'if it is running then' -e 'if current track is not equal to "" then' -e 'return "Playing!"' -e 'end if' -e 'else' -e 'error' -e 'end if' -e 'return ""' -e 'end tell')
  if [[ -n $music_playing ]]; then
    prin "┣╸SONG" "$(osascript -e 'set theName to ""' -e 'tell application "Music"' -e 'if it is running then' -e 'try' -e 'set theName to name of current track' -e 'return theName' -e 'end try' -e 'end if' -e 'return ""' -e 'end tell')"
    prin "┗╸ARTIST" "$(osascript -e 'set theArtist to ""' -e 'tell application "Music"' -e 'if it is running then' -e 'try' -e 'set theArtist to artist of current track' -e 'return theArtist' -e 'end try' -e 'end if' -e 'return ""' -e 'end tell')"
  fi
  prin "$(color 7)—————————————————————————————"
  info "$(color 7)$(color 9)  MOD" model
  info "┣╸OS" distro
  info "┣╸CPU" cpu
  info "┣╸GPU" gpu
  info "┣╸DIS" resolution
  info "┗╸UP" uptime
  prin "$(color 7)—————————————————————————————"
  info "$(color 7)$(color 9) SHELL" shell
  info "┣╸PACKAGES" packages
  info "┣╸EDITOR" editor
  info "┣╸TERMINAL" term
  info "┗╸FONT" term_font
  info cols
  # info title
  # info underline
  # info "OS" distro
  # info "Host" model
  # info "Kernel" kernel
  # info "Uptime" uptime
  # info "Packages" packages
  # info "Shell" shell
  # info "Editor" editor
  # info "Resolution" resolution
  # info "DE" de
  # info "WM" wm
  # info "WM Theme" wm_theme
  # info "Theme" theme
  # info "Icons" icons
  # info "Cursor" cursor
  # info "Terminal" term
  # info "Terminal Font" term_font
  # info "CPU" cpu
  # info "GPU" gpu
  # info "Memory" memory
  # info "Network" network
  # info "Bluetooth" bluetooth
  # info "BIOS" bios
  # info "GPU Driver" gpu_driver  # Linux/macOS only
  # info "Disk" disk
  # info "Battery" battery
  # info "Power Adapter" power_adapter # macOS only
  # info "Font" font
  # info "Song" song
  # [[ "$player" ]] && prin "Music Player" "$player"
  # info "Local IP" local_ip
  # info "Public IP" public_ip
  # info "Users" users
  # info "Locale" locale  # This only works on glibc systems.
  # info "Java" java_ver
  # info "Python" python_ver
  # info "Node" node_ver
  # info cols
}
title_fqdn="off"
kernel_shorthand="on"
distro_shorthand="on"
os_arch="off"
uptime_shorthand="tiny"
memory_percent="on"
memory_unit="gib"
mem_precision=2
package_managers="tiny"
package_separate="on"
shell_path="off"
shell_version="on"
editor_path="off"
editor_version="on"
speed_type="bios_limit"
speed_shorthand="on"
cpu_brand="on"
cpu_speed="on"
cpu_cores="logical"
cpu_temp="off"
gpu_brand="on"
gpu_type="all"
refresh_rate="on"
gtk_shorthand="off"
gtk2="on"
gtk3="on"
qt="on"
public_ip_host="http://ident.me"
public_ip_timeout=2
local_ip_interface=('auto')
de_version="on"
disk_show=('/','/users/isbell/Documents', '/users/isbell/Applications')
disk_subtitle="dir"
disk_percent="on"
music_player="auto"
song_format="%title% - %artist%"
song_shorthand="off"
mpc_args=()
colors=(7 7 7 9 7 6)
bold="on"
underline_enabled="on"
underline_char="-"
separator=" "
block_range=(0 15)
color_blocks="on"
block_width=3
block_height=1
col_offset="auto"
bar_char_elapsed="="
bar_char_total="-"
bar_border="on"
bar_length=15
bar_color_elapsed="11"
bar_color_total="7"
memory_display="barinfo"
battery_display="barinfo"
disk_display="barinfo"
image_backend="ascii"
image_source="auto"
ascii_distro="auto"
ascii_colors=(6 1 7 1 7 1)
ascii_bold="on"
image_loop="off"
thumbnail_dir="${XDG_CACHE_HOME:-${HOME}/.cache}/thumbnails/neofetch"
crop_mode="normal"
crop_offset="center"
image_size="auto"
catimg_size="2"
gap=3
yoffset=0
xoffset=0
background_color=
stdout="auto"
